// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: cart.sql

package db

import (
	"context"
	"database/sql"
)

const createCart = `-- name: CreateCart :one
INSERT INTO cart (total_price, vat, discount, status, customer_id)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, total_price, vat, discount, status, customer_id, created_at, updated_at
`

type CreateCartParams struct {
	TotalPrice int64      `json:"total_price"`
	Vat        int64      `json:"vat"`
	Discount   int64      `json:"discount"`
	Status     CartStatus `json:"status"`
	CustomerID int64      `json:"customer_id"`
}

func (q *Queries) CreateCart(ctx context.Context, arg CreateCartParams) (Cart, error) {
	row := q.db.QueryRow(ctx, createCart,
		arg.TotalPrice,
		arg.Vat,
		arg.Discount,
		arg.Status,
		arg.CustomerID,
	)
	var i Cart
	err := row.Scan(
		&i.ID,
		&i.TotalPrice,
		&i.Vat,
		&i.Discount,
		&i.Status,
		&i.CustomerID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getSavedCartByCustomerID = `-- name: GetSavedCartByCustomerID :one
SELECT cart.id,
       total_price,
       vat,
       discount,
       status,
       customer_id,
       c.name as customer_name,
       cart.created_at,
       updated_at
FROM cart
         LEFT JOIN customer c on c.id = cart.customer_id
WHERE c.id = $1
  and cart.status = 'saved'
`

type GetSavedCartByCustomerIDRow struct {
	ID           int64          `json:"id"`
	TotalPrice   int64          `json:"total_price"`
	Vat          int64          `json:"vat"`
	Discount     int64          `json:"discount"`
	Status       CartStatus     `json:"status"`
	CustomerID   int64          `json:"customer_id"`
	CustomerName sql.NullString `json:"customer_name"`
	CreatedAt    sql.NullTime   `json:"created_at"`
	UpdatedAt    sql.NullTime   `json:"updated_at"`
}

func (q *Queries) GetSavedCartByCustomerID(ctx context.Context, id int64) (GetSavedCartByCustomerIDRow, error) {
	row := q.db.QueryRow(ctx, getSavedCartByCustomerID, id)
	var i GetSavedCartByCustomerIDRow
	err := row.Scan(
		&i.ID,
		&i.TotalPrice,
		&i.Vat,
		&i.Discount,
		&i.Status,
		&i.CustomerID,
		&i.CustomerName,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
